0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/nickdrewe/Repos/xml-sanitize-string',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package.tgz not in flight; packing
9 verbose correctMkdir /Users/nickdrewe/.npm correctMkdir not in flight; initializing
10 info lifecycle xml-sanitize-string@1.0.1~prepublish: xml-sanitize-string@1.0.1
11 silly lifecycle xml-sanitize-string@1.0.1~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package.tgz',
12 verbose tar pack   '/Users/nickdrewe/Repos/xml-sanitize-string' ]
13 verbose tarball /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package.tgz
14 verbose folder /Users/nickdrewe/Repos/xml-sanitize-string
15 verbose addLocalTarball adding from inside cache /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package.tgz
16 verbose correctMkdir /Users/nickdrewe/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd xml-sanitize-string@1.0.1
18 verbose afterAdd /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package/package.json not in flight; writing
19 verbose correctMkdir /Users/nickdrewe/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package/package.json written
21 silly publish { name: 'xml-sanitize-string',
21 silly publish   version: '1.0.1',
21 silly publish   description: 'This module replaces characters that are not valid in XML in a string with XML/HTML character entities (and vice versa).',
21 silly publish   main: 'lib/index.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   keywords:
21 silly publish    [ 'xml',
21 silly publish      'unicode',
21 silly publish      'emoji',
21 silly publish      'sanitize',
21 silly publish      'escape',
21 silly publish      'html',
21 silly publish      'valid',
21 silly publish      'characters',
21 silly publish      'sanitizer' ],
21 silly publish   author: { name: 'Nick Drewe' },
21 silly publish   license: 'MIT',
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+ssh://git@github.com/teamwethrift/xml-sanitize-string.git' },
21 silly publish   bugs: { url: 'https://github.com/teamwethrift/xml-sanitize-string/issues' },
21 silly publish   homepage: 'https://www.searchmy.bio',
21 silly publish   readme: '# xml-sanitize-string\nThis module replaces characters that are not [valid in XML](https://www.npmjs.com/package/sanitize-xml-string) in a string with XML/HTML character entities (and vice versa).\n\nEmoji, and many other characters are not valid in XML, and may cause problems if they sneak into your XML. This small module has two methods to sanitize (escape invalid characters) a string, and to unescape a string.\n\n## Installation & usage\nInstall `xml-sanitize-string` via NPM:\n```sh\nnpm install xml-sanitize-string\n```\nIn Node:\n```js\nvar xmlSanitizeString = require(\'xml-sanitize-string\');\n\n// Sanatize a string for use in XML by escaping invalid characters to XML character entities.\nxmlSanitizeString.escape(\'Some ðŸ‘‰ invalid ðŸ’» characters ðŸŽ’\')\n// Some &#1f449; invalid &#1f4bb; characters &#1f392;\n\n// Unescape a string containing XML character entities to unicode characters\nxmlSanitizeString.unescape(\'Some &#1f449; invalid &#1f4bb; characters &#1f392;\')\n// Some ðŸ‘‰ invalid ðŸ’» characters ðŸŽ’\n```\n\n## About\nxml-sanitize-string was built by [Nick Drewe](https://www.twitter.com/nickdrewe) to deal with user searches on [searchmy.bio](https://www.wethrift.com) that may contain emoji, or other characters that are invalid in XML.\n',
21 silly publish   readmeFilename: 'readme.md',
21 silly publish   gitHead: '6583d02b99adda9295c30ad0df8baf018357e8dc',
21 silly publish   _id: 'xml-sanitize-string@1.0.1',
21 silly publish   _shasum: '88b287e50b5f928452a7acadef38e472466c11cf',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name xml-sanitize-string
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'xml-sanitize-string',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'xml-sanitize-string',
26 silly mapToRegistry   name: 'xml-sanitize-string',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/xml-sanitize-string
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/nickdrewe/.npm/xml-sanitize-string/1.0.1/package.tgz
30 verbose request uri https://registry.npmjs.org/xml-sanitize-string
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 3:39:03 PM
33 verbose request using bearer token for auth
34 verbose request id c3c959593ee67c1e
35 http request PUT https://registry.npmjs.org/xml-sanitize-string
36 http 403 https://registry.npmjs.org/xml-sanitize-string
37 verbose headers { date: 'Mon, 06 Aug 2018 05:39:04 GMT',
37 verbose headers   'content-type': 'application/json',
37 verbose headers   'transfer-encoding': 'chunked',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'set-cookie': [ '__cfduid=d4f0e54f938579a52b10c7e4c3fbb7e701533533943; expires=Tue, 06-Aug-19 05:39:03 GMT; path=/; domain=.registry.npmjs.org; HttpOnly' ],
37 verbose headers   'cf-ray': '445f29289dca5d9c-BNE',
37 verbose headers   'expect-ct': 'max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"',
37 verbose headers   server: 'cloudflare',
37 verbose headers   'content-encoding': 'gzip' }
38 verbose request invalidating /Users/nickdrewe/.npm/registry.npmjs.org/xml-sanitize-string on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published versions: 1.0.1. : xml-sanitize-string
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at /usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:216:7
40 verbose stack     at Gunzip.onEnd (zlib.js:227:5)
40 verbose stack     at emitNone (events.js:91:20)
40 verbose stack     at Gunzip.emit (events.js:185:7)
40 verbose stack     at endReadableNT (_stream_readable.js:974:12)
40 verbose stack     at _combinedTickCallback (internal/process/next_tick.js:74:11)
40 verbose stack     at process._tickCallback (internal/process/next_tick.js:98:9)
41 verbose statusCode 403
42 verbose pkgid xml-sanitize-string
43 verbose cwd /Users/nickdrewe/Repos/xml-sanitize-string
44 error Darwin 16.7.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.10.0
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published versions: 1.0.1. : xml-sanitize-string
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
